"""
1. Написать функцию arithmetic, принимающую 3 аргумента: первые 2 - числа, третий - операция, которая должна
быть произведена над ними. Функция должна вернуть результат вычислений зависящий от третьего аргумент +, сложить
их; если —, то вычесть; * — умножить; / — разделить (первое на второе). В остальных случаях вернуть
строку "Неизвестная операция".
"""
def arithmetic (number1, number2, action):
    if action == "+":
        return number1 + number2

    elif action == "-":
        return number1 - number2

    elif action == "*":
        return number1 * number2

    elif action == "/":
        return number1 / number2

    else:
        print('Неизвестная операция')

number1 = int(input('Enter the number_1: '))
number2 = int(input('Enter the number_2: '))
action = input('Enter arithmetic operation: ')

res = arithmetic (number1, number2, action)

print(res)



"""
2. Написать функцию is_year_leap, принимающую 1 аргумент — год, и возвращающую True, если год високосный, и
False иначе.
"""
def is_year_leap (year):
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        return True
    else:
        return False
year = int(input('Enter year number: '))
a = is_year_leap (year)
print(a)


"""
3. Написать функцию square, принимающую 1 аргумент — сторону квадрата, и возвращающую 3 значения (с помощью
кортежа): периметр квадрата, площадь квадрата и диагональ квадрата.
"""
from math import sqrt

def square (side):
    perim = side*4
    area = side*side
    diag = side * sqrt(2)
    return perim, area, diag
side = int(input('Еnter the side of the square: '))
s = square (side)
print(s)

"""
4. Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12), и возвращающую время года,
которому этот месяц принадлежит (зима, весна, лето или осень).
"""
def season (month):
    if 1<= month <=2 and month == 12:
        return 'winter'
    elif 2<month<6:
        return 'spring'
    elif 5<month<9:
        return 'summer'
    else:
        return 'autumn'
month = int(input('Enter the month number: '))
print(season(month))

#   Второй вариант решения
def get_season (in_month):
    seasons = dict(winter = (12,1,2), spring = (3,4,5), summer = (6,7,8), autumn = (9,10,11))
    for season in seasons.keys():
        for month in seasons[season]:
            if month == in_month:
                return season
    return 'Нет такого месяца'

month = int(input('Enter the month number: '))
print(get_season(month))
